# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# spottedPlace = {
#   spottedId: string,
#   datetime: string,
#   images: [],
#   status: boolean,
#   location: string,
#   locationName: string,
#   camName: string
# }
scalar Time

type camera {
  cameraID: ID!
  locationName: String!
  location: String!
  latitude: Float!
  longitude: Float!
}

type case {
  caseID: ID!
  case_date: Time!
  camera_id: ID!
  image1_path: String!
  image2_path: String
  image3_path: String
  image4_path: String
  status: Boolean!
  respond: Boolean!

}

type frontEndCase {
  caseID: ID!
  locationName: String!
  location: String!
  latitude: Float!
  longitude: Float!
  case_date: Time!
  camera_id: ID!
  image1_path: String!
  image2_path: String
  image3_path: String
  image4_path: String
  status: Boolean!
  respond: Boolean!
}

input newCamera {
  locationName: String!
  location: String!
  latitude: Float!
  longitude: Float!
}

input cameraUpdate{
  id: ID!
  locationName: String!
  location: String!
  latitude: Float!
  longitude: Float!
}

input newCase {
  case_date: Time!
  camera_id: ID!
  image1_path: String!
  image2_path: String
  image3_path: String
  image4_path: String
}

input caseUpdate{
  id: ID!
  case_date: Time!
  camera_id: ID!
  image1_path: String!
  image2_path: String
  image3_path: String
  image4_path: String
  status: Boolean!
  respond: Boolean!
}

type Query {
  cameraByID(input: ID!): camera!
  cameras: [camera!]!

  caseByID(input: ID!): case!
  cases: [case!]!
  CaseByResponse(input: Boolean): [frontEndCase!]!
}


type Mutation {
  dropTable: Boolean!
  createTable: Boolean!
  
  cameraCreate(input: newCamera!): camera!
  cameraUpdate(input: cameraUpdate!): camera!
  cameraDelete(input: ID!): camera!
  cameraDeleteAll: [camera!]

  caseCreate(input: newCase!): case!
  caseUpdate(input: caseUpdate!): case!
  caseDelete(input: ID!): case!
  caseDeleteAll: [case!]
}
